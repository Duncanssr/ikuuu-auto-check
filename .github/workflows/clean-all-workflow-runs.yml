name: 每月全量清理工作流记录

# 触发条件：每月1日UTC 0点自动执行 + 手动触发
on:
  schedule:
    - cron: '0 0 1 * *'
  workflow_dispatch:

jobs:
  clean-all-runs:
    runs-on: ubuntu-latest
    permissions:
      actions: write  # 核心权限：必须授予删除工作流的权限
      contents: read  # 辅助权限：确保能读取仓库基础信息
    env:
      REPO: ${{ github.repository }}  # 自动获取当前仓库（格式：用户名/仓库名）
      CURRENT_RUN_ID: ${{ github.run_id }}  # 获取当前清理工作流的ID（避免删除自身运行中记录）

    steps:
      - name: 安装GitHub CLI（确保gh命令可用）
        run: |
          type -p curl >/dev/null || (sudo apt update && sudo apt install curl -y)
          curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg
          sudo chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null
          sudo apt update && sudo apt install gh -y
          gh auth status  # 验证授权（依赖GITHUB_TOKEN自动授权）

      - name: 全量清理所有工作流记录（含自身历史记录）
        run: |
          echo "开始清理仓库 $REPO 的所有工作流记录（当前清理任务ID：$CURRENT_RUN_ID）"
          
          # 1. 获取仓库中所有工作流的ID（包括清理自身的工作流）
          WORKFLOW_IDS=$(gh api -X GET /repos/$REPO/actions/workflows | jq -r '.workflows[] | .id')
          
          # 2. 遍历每个工作流，删除其所有记录（排除当前运行的清理任务）
          for WORKFLOW_ID in $WORKFLOW_IDS; do
            echo -e "\n=== 处理工作流 ID: $WORKFLOW_ID ==="
            PAGE=1
            while true; do
              # 分页获取该工作流的所有记录（每页100条，最大支持）
              RUNS_RESPONSE=$(gh api -X GET "/repos/$REPO/actions/workflows/$WORKFLOW_ID/runs?page=$PAGE&per_page=100")
              RUNS=$(echo "$RUNS_RESPONSE" | jq -r --arg CURRENT_ID "$CURRENT_RUN_ID" '.workflow_runs[] | select(.id != $CURRENT_ID) | .id')
              
              # 若没有更多记录，退出当前工作流的循环
              if [ -z "$RUNS" ] || [ "$RUNS" = "null" ]; then
                echo "该工作流已无待删除记录（当前页：$PAGE）"
                break
              fi
              
              # 逐个删除记录，带错误重试（最多3次）
              for RUN_ID in $RUNS; do
                echo -n "删除记录 ID: $RUN_ID ... "
                RETRY=0
                MAX_RETRY=3
                while [ $RETRY -lt $MAX_RETRY ]; do
                  # 尝试删除记录
                  DELETE_RESPONSE=$(gh api -X DELETE "/repos/$REPO/actions/runs/$RUN_ID" 2>&1)
                  DELETE_EXIT_CODE=$?
                  
                  # 成功删除：退出重试
                  if [ $DELETE_EXIT_CODE -eq 0 ]; then
                    echo "成功"
                    break
                  # 失败重试：间隔2秒后重试
                  else
                    RETRY=$((RETRY + 1))
                    if [ $RETRY -lt $MAX_RETRY ]; then
                      echo -n "失败（重试 $RETRY/$MAX_RETRY），2秒后重试... "
                      sleep 2
                    # 多次失败：记录错误并跳过
                    else
                      echo -e "失败（已重试$MAX_RETRY次），错误信息：\n$DELETE_RESPONSE"
                    fi
                  fi
                done
              done
              
              # 进入下一页
              PAGE=$((PAGE + 1))
              sleep 1  # 控制API请求频率，避免触发GitHub限制
            done
          done
          
          echo -e "\n✅ 所有可删除的工作流记录已处理完成"
